%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/galactic/.*$
%global __requires_exclude_from ^/opt/ros/galactic/.*$

Name:           ros-galactic-swri-image-util
Version:        3.5.1
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS swri_image_util package

License:        BSD
URL:            https://github.com/swri-robotics/marti_common
Source0:        %{name}-%{version}.tar.gz

Requires:       boost-devel
Requires:       boost-python%{python3_pkgversion}-devel
Requires:       eigen3-devel
Requires:       ros-galactic-ament-index-cpp
Requires:       ros-galactic-camera-calibration-parsers
Requires:       ros-galactic-cv-bridge
Requires:       ros-galactic-geometry-msgs
Requires:       ros-galactic-image-geometry
Requires:       ros-galactic-image-transport
Requires:       ros-galactic-message-filters
Requires:       ros-galactic-nav-msgs
Requires:       ros-galactic-rclcpp
Requires:       ros-galactic-rclcpp-components
Requires:       ros-galactic-rclpy
Requires:       ros-galactic-std-msgs
Requires:       ros-galactic-swri-geometry-util
Requires:       ros-galactic-swri-math-util
Requires:       ros-galactic-swri-opencv-util
Requires:       ros-galactic-swri-roscpp
Requires:       ros-galactic-tf2
Requires:       ros-galactic-ros-workspace
BuildRequires:  boost-devel
BuildRequires:  boost-python%{python3_pkgversion}-devel
BuildRequires:  eigen3-devel
BuildRequires:  pkgconfig
BuildRequires:  ros-galactic-ament-cmake
BuildRequires:  ros-galactic-ament-index-cpp
BuildRequires:  ros-galactic-camera-calibration-parsers
BuildRequires:  ros-galactic-cv-bridge
BuildRequires:  ros-galactic-geometry-msgs
BuildRequires:  ros-galactic-image-geometry
BuildRequires:  ros-galactic-image-transport
BuildRequires:  ros-galactic-message-filters
BuildRequires:  ros-galactic-nav-msgs
BuildRequires:  ros-galactic-rclcpp
BuildRequires:  ros-galactic-rclcpp-components
BuildRequires:  ros-galactic-rclpy
BuildRequires:  ros-galactic-std-msgs
BuildRequires:  ros-galactic-swri-geometry-util
BuildRequires:  ros-galactic-swri-math-util
BuildRequires:  ros-galactic-swri-opencv-util
BuildRequires:  ros-galactic-swri-roscpp
BuildRequires:  ros-galactic-tf2
BuildRequires:  ros-galactic-ros-workspace
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%if 0%{?with_tests}
BuildRequires:  ros-galactic-ament-cmake-gtest
%endif

%description
swri_image_util

%prep
%autosetup -p1

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/galactic/setup.sh" ]; then . "/opt/ros/galactic/setup.sh"; fi
mkdir -p .obj-%{_target_platform} && cd .obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/galactic" \
    -DAMENT_PREFIX_PATH="/opt/ros/galactic" \
    -DCMAKE_PREFIX_PATH="/opt/ros/galactic" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
%if !0%{?with_tests}
    -DBUILD_TESTING=OFF \
%endif
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/galactic/setup.sh" ]; then . "/opt/ros/galactic/setup.sh"; fi
%make_install -C .obj-%{_target_platform}

%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C .obj-%{_target_platform} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/galactic/setup.sh" ]; then . "/opt/ros/galactic/setup.sh"; fi
CTEST_OUTPUT_ON_FAILURE=1 \
    %make_build -C .obj-%{_target_platform} $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/galactic

%changelog
* Fri Dec 02 2022 P. J. Reed <preed@swri.org> - 3.5.1-1
- Autogenerated by Bloom

* Thu Apr 21 2022 P. J. Reed <preed@swri.org> - 3.4.1-1
- Autogenerated by Bloom

* Wed Nov 17 2021 P. J. Reed <preed@swri.org> - 3.4.0-1
- Autogenerated by Bloom

* Wed Sep 22 2021 P. J. Reed <preed@swri.org> - 3.3.2-2
- Autogenerated by Bloom

* Wed Sep 08 2021 P. J. Reed <preed@swri.org> - 3.3.2-1
- Autogenerated by Bloom

